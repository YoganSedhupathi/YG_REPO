/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.9
 * Generated at: 2023-08-21 05:30:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class customerProductMaster_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\r\n");
      out.write("  <title>Customer Product Master</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>Customer Products</h1>\r\n");
      out.write("<!--add and search-->\r\n");
      out.write("<!-- JQ grid starts-->\r\n");
      out.write("<div id=\"xyz\" style='position:relative;border:0px;display:none;'></div>			    	 \r\n");
      out.write("<div id=\"callback\" style='position:relative;border:0px;padding:0px;display:block;float:left'></div>\r\n");
      out.write("<!-- JQ grid ends-->\r\n");
      out.write("<div id=\"saveGrp\" style='display:block'>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  	var l=new FlexUI.Ajax();\r\n");
      out.write("  var sProps={title:{height:30,width:100,name:\"AMC\"},container:{id:\"callback\",isdialog:false},js:\"js/validations/customerproductmaster.js\",screen:[\r\n");
      out.write("  {name:\"group1\",title:\"Customer Details\",height:40,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"beige\",contentType:\"Fields\",\r\n");
      out.write("  fields:[{name:\"mobile\",inputType:0,type:\"TEXT\",caption:\"Mobile\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":30,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"name\",validation:\"fetchCustomer\"},  \r\n");
      out.write("  {name:\"name\",inputType:0,type:\"LOV\",caption:\"Name\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":true,nf:\"address1\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"customer\",scrollEnabled:true,searchFromList:false,dsi:2,params:[],results:[{tgt:\"name\",tt:true,id:\"0\"},{tgt:\"name\",tt:false,id:\"1\"},{tgt:\"mobile\",tt:false,id:\"2\"},{tgt:\"custname\",tt:false,id:\"0\"},{tgt:\"address1\",tt:false,id:\"3\"},{tgt:\"address2\",tt:false,id:\"4\"},{tgt:\"city\",tt:false,id:\"5\"},{tgt:\"pincode\",tt:false,id:\"6\"}]}},  \r\n");
      out.write("  {name:\"address1\",inputType:0,type:\"TEXT\",caption:\"Building\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"chkTag\":false,nf:\"address2\"},\r\n");
      out.write("  {name:\"address2\",inputType:0,type:\"TEXT\",caption:\"Street\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"chkTag\":false,nf:\"city\"},\r\n");
      out.write("  {name:\"city\",inputType:0,type:\"TEXT\",caption:\"City\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":50,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"chkTag\":false,nf:\"pincode\"},\r\n");
      out.write("  {name:\"pincode\",inputType:0,type:\"TEXT\",caption:\"PinCode\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"chkTag\":false,nf:\"go\"},\r\n");
      out.write("  {name:\"go\",inputType:3,caption:\"Go\",onclick:\"loadCustomerProduct\",visible:true}\r\n");
      out.write("  ]\r\n");
      out.write("  },{name:\"products\",title:\"Product Details\",height:30,width:98,minWidth:500,minHeight:200,colWidth:98,float:\"left\",backColor:\"biege\",contentType:\"Table\",tableProperties:{rowEmptyCheckColumn:1,optional:true,columns:[\r\n");
      out.write("    {order:\"0\",id: \"sno\", name: \"SNo\", field: \"sno\",defaultValue:\"0\",\"inputType\":0,\"type\":\"INT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":true,\"chkTag\":false,width:20,sno:true},\r\n");
      out.write("    {order:\"1\",id: \"product\", name: \"Product\", field: \"product\",defaultValue:\"y\",\"inputType\":0,\"type\":\"LOV\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"mandatory\":true,lovOptions:{url:\"/inventory/service/ajax\",ajax:\"productwotax\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[{tgt:\"products_data\",tt:false,row:\"cr\",col:\"1\",id:\"0\"},{tgt:\"products_data\",tt:true,row:\"cr\",col:\"1\",id:\"1\"},{tgt:\"products_data\",tt:false,row:\"cr\",col:\"2\",id:\"2\"},{tgt:\"products_data\",tt:false,row:\"cr\",col:\"3\",id:\"3\"},{tgt:\"products_data\",tt:false,row:\"cr\",col:\"4\",id:\"4\"}]},width:100,chkTag:true},\r\n");
      out.write("    {order:\"2\",id: \"pgcode\", name: \"pgcode\", field: \"pgcode\",defaultValue:\"0\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":true,\"mandatory\":false,width:0},\r\n");
      out.write("    {order:\"3\",id: \"serialized\", name: \"serialized\", field: \"serialized\",defaultValue:\"0\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":true,\"mandatory\":false,width:0},\r\n");
      out.write("    {order:\"4\",id: \"isattribute\", name: \"isattribute\", field: \"isattribute\",defaultValue:\"0\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":true,\"mandatory\":false,width:0},\r\n");
      out.write("    {order:\"5\",id: \"rate\", name: \"Rate\", field: \"rate\",defaultValue:\"0\",\"inputType\":0,\"type\":\"DECIMAL\",\"maxValue\":999999.99,\"textLength\":10,\"decimalLength\":2,\"visible\":true,\"readOnly\":false,\"mandatory\":false,width:100,align:\"right\"},\r\n");
      out.write("    {order:\"6\",id: \"discount\", name: \"Discount\", field: \"discount\",defaultValue:\"0\",\"inputType\":0,\"type\":\"DECIMAL\",\"maxValue\":999999.99,\"textLength\":10,\"decimalLength\":2,\"visible\":true,\"readOnly\":false,\"mandatory\":false,width:100,align:\"right\"}\r\n");
      out.write("    ]\r\n");
      out.write("    }}]};\r\n");
      out.write("  var custProduct=new FlexUI.Screen(\"cp\",sProps);\r\n");
      out.write("  function onSaveClicked(id,me){\r\n");
      out.write("    custProduct.setOperation(\"EDIT\");\r\n");
      out.write("	var d=custProduct.processDataToSave();\r\n");
      out.write("	if(\"FAILED\"!=d){\r\n");
      out.write("		var s=new FlexUI.Ajax();\r\n");
      out.write("		var r=s.callAjax(\"POST\",\"/inventory/service/customer/products\",d);\r\n");
      out.write("		if(r.result==\"Success\"){\r\n");
      out.write("			setErrorMessage(r.message);\r\n");
      out.write("			custProduct.clearScreen();\r\n");
      out.write("			return r.key;			\r\n");
      out.write("		}else{\r\n");
      out.write("			setErrorMessage(r.message);		\r\n");
      out.write("		}\r\n");
      out.write("		return 0;\r\n");
      out.write("	}\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  function loadCustomerProduct(){\r\n");
      out.write("    var code=screenObjects.getScreenObject(\"name\").getTag();\r\n");
      out.write("    if(code!='0' && code!=\"\"){\r\n");
      out.write("	  	var	url=\"/inventory/service/customer/products\";\r\n");
      out.write("	  	var	data=\"code=\"+code+\"\";\r\n");
      out.write("		var v=l.callAjax(\"GET\",url,data);\r\n");
      out.write("		custProduct.loadData(v);\r\n");
      out.write("	 }\r\n");
      out.write("	 return true;\r\n");
      out.write("  }\r\n");
      out.write("</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
