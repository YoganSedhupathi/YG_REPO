/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.9
 * Generated at: 2024-02-23 07:44:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class QuickSessionClosing_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\r\n");
      out.write("  <title>Session Closing</title>\r\n");
      out.write("</head>\r\n");
      out.write("	");

	String mode=request.getParameter("mode");
	String code=request.getParameter("code");
	
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"card border-0 shadow\">\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("		  <!--Header-->\r\n");
      out.write("			<div class=\"row w-100\">\r\n");
      out.write("				<div class=\"col-md-6 d-flex align-items-center\">\r\n");
      out.write("					<h4 class=\"header-title\">Session Details</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div  class=\"col-md-6 text-right\" id=\"addGrp\">\r\n");
      out.write("					<div id=\"actButton\" class=\"mb-3\">\r\n");
      out.write("						<button id=\"btnGenerate\" class=\"btn btn-primary priBut\" type=\"button\" onclick=\"showSession()\">Go</button>\r\n");
      out.write("						<button id=\"btnPrint\" class=\"btn btn-primary priBut\" type=\"button\" onclick=\"printSession()\">Print</button>\r\n");
      out.write("						<button id=\"btnClear\" class=\"btn btn-clear mx-3\" type=\"button\" onclick=\"clearInnerScreen()\"><span class=\"mdi mdi-close-box\"></span>Clear</button>			\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"row w-100\">\r\n");
      out.write("				<div class=\"col-sm-12 col-md-12 col-lg-12 sBor\" style=\"display:block\" >                    \r\n");
      out.write("				<div id=\"branch1\" class=\"\">\r\n");
      out.write("				</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div> \r\n");
      out.write("\r\n");
      out.write("			<div id=\"callback\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("						<div class=\"table-container\">\r\n");
      out.write("						<div id=\"rep\" class=\"col-md-12 col-sm-12 garea\">\r\n");
      out.write("							<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" id=\"cashdetails\">\r\n");
      out.write("								\r\n");
      out.write("							</table>\r\n");
      out.write("						</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row w-100 mt-3\">\r\n");
      out.write("						<div class=\"col-md-9\"></div>\r\n");
      out.write("							<div class=\"col-md-3\">\r\n");
      out.write("								<div class=\"p-2 gap-2 bg-white shadow-sm rounded-3\">\r\n");
      out.write("									<table>\r\n");
      out.write("									<thead>\r\n");
      out.write("										<th style=\"width:25%;\">\r\n");
      out.write("										<div class=\"card-total rounded-3 \" >\r\n");
      out.write("											Net Amount &nbsp;:&nbsp; <span class=\"amount-text ml-2\" id=\"netAmt\"></span>\r\n");
      out.write("											<label style=\"display:none;\" id=\"totalamt\"></label>\r\n");
      out.write("										</div>\r\n");
      out.write("										</th>\r\n");
      out.write("									</thead>\r\n");
      out.write("									<tbody>\r\n");
      out.write("									</tbody>\r\n");
      out.write("									</table>\r\n");
      out.write("							</div>\r\n");
      out.write("								</div>\r\n");
      out.write("					</div>\r\n");
      out.write("			</div>  \r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("		  \r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write(" 	var l=new FlexUI.Ajax();\r\n");
      out.write("	var v=l.callAjax(\"GET\",\"/inventory/service/ajax\",\"ic=0&id=userdefbranch\");\r\n");
      out.write("	var defbranch=v.data;\r\n");
      out.write("	\r\n");
      out.write(" 	var sProps={js:\"\",screen:[\r\n");
      out.write(" 	{name:\"branch1\",title:\"\",pcolumns:2,height:30,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"biege\",contentType:\"Fields\",\r\n");
      out.write("	  fields:[ {colno:0,name:\"branch\",inputType:0,type:\"LOV\",caption:\"Branch\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":false,\"chkTag\":true,nf:\"location\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"userbranch\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[{tgt:\"branch\",tt:true,id:\"1\"},{tgt:\"branch\",tt:false,id:\"0\"},{tgt:\"location\",tt:false,id:\"5\"},{tgt:\"location\",tt:true,id:\"6\"}]}},\r\n");
      out.write("	  {colno:0,name:\"location\",inputType:0,type:\"LOV\",caption:\"\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":false,\"chkTag\":true,nf:\"custname\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"branchlocations\",scrollEnabled:true,searchFromList:false,dsi:0,params:[{n:\"branch\",src:\"branch\",ft:true}],results:[]}},\r\n");
      out.write("	  {colno:1,name:\"username\",inputType:0,type:\"LOV\",caption:\"User\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":true,\"chkTag\":false,nf:\"starttime\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"branchemployee\",scrollEnabled:true,searchFromList:false,dsi:0,params:[{n:\"branch\",src:\"branch\",ft:true}],results:[{tgt:\"username\",tt:false,id:\"0\"},{tgt:\"username\",tt:true,id:\"2\"}]}},\r\n");
      out.write("  	  {colno:0,name:\"fromdate\",inputType:0,type:\"DATE\",format:\"dd/mm/yyyy\",caption:\"Date\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"\"},\r\n");
      out.write("  	  {colno:1,name:\"processdate\",inputType:0,type:\"TEXT\",format:\"dd/mm/yyyy\",caption:\"Taken Time\",mandatory:false,defaultValue:\"\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"chkTag\":false,nf:\"\"}\r\n");
      out.write("	]}]};\r\n");
      out.write("	var sessionClose=null;	\r\n");
      out.write("	\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("    		qsessionClose=new FlexUI.Screen(\"qsessionclose\",sProps);\r\n");
      out.write("    		setDefaultBranch();    		\r\n");
      out.write("            $('#subtitle').text(\"\");\r\n");
      out.write("			$('#fromdate').datepicker(\r\n");
      out.write("	{\r\n");
      out.write("		language: \"en\",\r\n");
      out.write("        autoclose: true,\r\n");
      out.write("       	todayHighlight: true,\r\n");
      out.write("		format:'dd/mm/yyyy'\r\n");
      out.write("	}\r\n");
      out.write("	);	\r\n");
      out.write("            screenObjects.getScreenObject(\"fromdate\").setValue(new Date());\r\n");
      out.write("            screenObjects.getScreenObject(\"processdate\").setEnabled(false);\r\n");
      out.write("            $('#screentitle').text(\"Session Closing\");\r\n");
      out.write("            ConstructPharmacyGrid();\r\n");
      out.write("\r\n");
      out.write("     });\r\n");
      out.write("    function clearInnerScreen(){\r\n");
      out.write("    	qsessionClose.clearScreen();\r\n");
      out.write("    	setDefaultBranch();\r\n");
      out.write("    	$(\"fromdate\").focus();\r\n");
      out.write("    	$grid = $(\"#cashdetails\");\r\n");
      out.write("    	$grid.clearGridData();\r\n");
      out.write("    	$grid.jqGrid('setGridParam', { data: [] });\r\n");
      out.write("    	// $grid[0].refreshIndex();\r\n");
      out.write("    	$grid.trigger(\"reloadGrid\");    	\r\n");
      out.write("    	$('#netCash').text(\"Net Cash : 0.00\");\r\n");
      out.write("		$('#fromdate').datepicker(\r\n");
      out.write("	{\r\n");
      out.write("		language: \"en\",\r\n");
      out.write("        autoclose: true,\r\n");
      out.write("       	todayHighlight: true,\r\n");
      out.write("		format:'dd/mm/yyyy'\r\n");
      out.write("	}\r\n");
      out.write("	);	\r\n");
      out.write("    }\r\n");
      out.write("    function ConstructPharmacyGrid() {\r\n");
      out.write("        var areaWidth = 800;\r\n");
      out.write("        $(\"#cashdetails\").jqGrid({\r\n");
      out.write("            datatype: \"local\",\r\n");
      out.write("            //width: areaWidth,\r\n");
      out.write("            height:250,\r\n");
      out.write("            autowidth: true,\r\n");
      out.write("            shrinktofit:true,\r\n");
      out.write("            colNames: ['BU', 'Cash', 'Card','Sponsor','Credit'],\r\n");
      out.write("            colModel: [\r\n");
      out.write("                        { name: 'buname', index: 'buname', sorttype: \"integer\", sortable: false, width: 100, align: 'left'},\r\n");
      out.write("                        { name: 'cash', index: 'cash', sorttype: \"text\", sortable: false, width: 100, align: 'left' },\r\n");
      out.write("						{ name: 'card', index: 'card', sorttype: \"text\", sortable: false, width: 200, align: 'left' },\r\n");
      out.write("						{ name: 'sponsor', index: 'sponsor', sorttype: \"text\", sortable: false, width: 200, align: 'left' },\r\n");
      out.write("						{ name: 'credit', index: 'credit', sorttype: \"text\", sortable: false, width: 200, align: 'left' }\r\n");
      out.write("            ],\r\n");
      out.write("            rowNum: 500,\r\n");
      out.write("            footerrow:true,\r\n");
      out.write("            userDataOnFooter:true,\r\n");
      out.write("            datatype: \"jsonstring\",\r\n");
      out.write("            jsonReader: { repeatitems: false },\r\n");
      out.write("            viewrecords: true,\r\n");
      out.write("            gridview: true,\r\n");
      out.write("            loadtext: \"Loading....\",\r\n");
      out.write("            multiselect: false,\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("	function showSession(){\r\n");
      out.write("	    var data;\r\n");
      out.write("	    var fromDate=screenObjects.getScreenObject(\"fromdate\").getValue();\r\n");
      out.write("	    var branch=screenObjects.getScreenObject(\"branch\").getTag();\r\n");
      out.write("	    var userId=screenObjects.getScreenObject(\"username\").getTag();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("            url: \"/inventory/service/account/quickcashhandover?userid=0&branchcode=\"+branch+\"&fromdate=\"+fromDate,\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType:\"application/json\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("				data=r;		\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $grid = $(\"#cashdetails\");\r\n");
      out.write("        $grid.clearGridData();\r\n");
      out.write("        $grid.jqGrid('setGridParam', { data: data[\"cashdetails\"] });\r\n");
      out.write("       // $grid[0].refreshIndex();\r\n");
      out.write("        $grid.trigger(\"reloadGrid\");\r\n");
      out.write("        $grid.footerData('set',{\"cash\":data[\"totalcash\"],\"card\":data[\"totalcard\"],\"sponsor\":data[\"totalsponsor\"],\"credit\":data[\"totalcredit\"]},false);\r\n");
      out.write("        $('#netCash').text(\"Net Cash : \"+data[\"totalcash\"]);        	\r\n");
      out.write("        screenObjects.getScreenObject(\"processdate\").setValue(data[\"gendate\"]);		\r\n");
      out.write("	}\r\n");
      out.write("	function printSession(){\r\n");
      out.write("		var fromDate=screenObjects.getScreenObject(\"fromdate\").getValue();\r\n");
      out.write("		var branch=screenObjects.getScreenObject(\"branch\").getTag();\r\n");
      out.write("	    var userId=screenObjects.getScreenObject(\"username\").getTag();		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("            url: \"/inventory/service/account/quickcashhandover?userid=0&branchcode=\"+branch+\"&fromdate=\"+fromDate,\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            contentType:\"application/json\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("				data=r;		\r\n");
      out.write("            }\r\n");
      out.write("        });	\r\n");
      out.write("		$.ajax({\r\n");
      out.write("            url: \"http://localhost:8282\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType:\"application/x-www-form-urlencoded\",\r\n");
      out.write("            data:\"printdata=\"+JSON.stringify(data),\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("				//alert(r.result);		\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("	}\r\n");
      out.write("	function setDefaultBranch(){\r\n");
      out.write("		var branch=screenObjects.getScreenObject(\"branch\");\r\n");
      out.write("		var location=screenObjects.getScreenObject(\"location\");\r\n");
      out.write("		branch.setTag(defbranch[0][1]);\r\n");
      out.write("		branch.setValue(defbranch[0][0]);\r\n");
      out.write("		location.setTag(defbranch[0][3]);\r\n");
      out.write("		location.setValue(defbranch[0][2]);	\r\n");
      out.write("	}\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
