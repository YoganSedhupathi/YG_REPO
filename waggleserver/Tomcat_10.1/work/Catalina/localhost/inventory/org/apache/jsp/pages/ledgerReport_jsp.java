/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.9
 * Generated at: 2024-01-08 06:09:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class ledgerReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\r\n");
      out.write("  <title>Receipts/Payments</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String code=(String)request.getParameter("code");
	String branch=(String)request.getParameter("branch");
	String userId=(String)session.getAttribute("LOGIN_ID");
	String rptId=(String)request.getParameter("id");
	String rptTitle="Ledger Report";
	if(rptId.equals("610015")){
		rptTitle="Cash Book";
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"card border-0 shadow\">\r\n");
      out.write("	<div class=\"card-body lpage\">\r\n");
      out.write("	  <!--Header-->\r\n");
      out.write("	  <div class=\"row w-100\">\r\n");
      out.write("		<div class=\"col-md-6 d-flex align-items-center\">\r\n");
      out.write("			<h4 class=\"header-title\">");
      out.print(rptTitle);
      out.write("</h4>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"col-md-6 text-right\" id=\"addGrp\">\r\n");
      out.write("			<div id=\"actionicons\">\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-edit\" onclick=\"printCurrentSession()\"><span class=\"mdi mdi-printer\">Print</span></button>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-clear mx-3\" onclick=\"enableSearch();\"><span class=\"mdi mdi-filter\">Filter</span></button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  <!--Header End-->\r\n");
      out.write("		<!--Content Start-->	  \r\n");
      out.write("		<div id=\"content\" class=\"mt-3\">\r\n");
      out.write("			<div id=\"filter\" style=\"display:block\" >\r\n");
      out.write("		  		<div class=\"row w-100\">\r\n");
      out.write("					<div >                    \r\n");
      out.write("						<div id=\"branch1\" class=\"\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"col-sm-9 col-md-9 col-lg-9\"  >                    \r\n");
      out.write("						<div id=\"divFirstFilter\" class=\"sBor\">\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"col-sm-3 col-md-4 col-lg-3\"  >\r\n");
      out.write("						<div id=\"divSecond\" class=\"\">\r\n");
      out.write("							<div class=\"col-sm-4 col-md-4 col-lg-4 mpZero\">\r\n");
      out.write("								<div class=\"form-group extrBT\" style=\"justify-content: space-between;\">\r\n");
      out.write("									<button type=\"button\" class=\"btn btn-save\" onclick=\"reportGo(");
      out.print(rptId);
      out.write(")\"><span class=\"mdi mdi-arrow-right\">Go</span></button>\r\n");
      out.write("								</div>	\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"table-container\">\r\n");
      out.write("					<div class=\"col-md-12 col-sm-12 aarea\" id=\"rep\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("		  	</div>	\r\n");
      out.write("			  <div class=\"row w-100 mt-3\">\r\n");
      out.write("				<div class=\"col-md-8\">\r\n");
      out.write("					<div class=\"p-2 gap-2 bg-white shadow-sm rounded-3\">\r\n");
      out.write("						<div class=\"gap-2 card-dicount px-3 bg-custom rounded-3 text-right\">\r\n");
      out.write("					\r\n");
      out.write("					  	<div class=\"\">\r\n");
      out.write("								<span class=\"amount-text\" id=\"netAmt\">Closing Balance :0.00</span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!--  -->\r\n");
      out.write("			</div>\r\n");
      out.write("			  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		  </div>\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	  <!--Content End-->\r\n");
      out.write("<script>\r\n");
      out.write("var l=new FlexUI.Ajax();\r\n");
      out.write("var v=l.callAjax(\"GET\",\"/inventory/service/ajax\",\"ic=0&id=userdefbranch\");\r\n");
      out.write("var defbranch=v.data;\r\n");
      out.write("var acvis=false;\r\n");
      out.write("var colno=0;\r\n");
      out.write("if(");
      out.print(rptId);
      out.write("==610014){\r\n");
      out.write("	acvis=true;\r\n");
      out.write("	colno=1;\r\n");
      out.write("}\r\n");
      out.write("  var sProps={title:{height:25,width:100,name:\"Invoice\"},container:{id:\"callback\",isdialog:false},js:\"\",screen:[\r\n");
      out.write("  {name:\"divFirstFilter\",title:\"\",pcolumns:3,colcss:\"col-sm-4 col-md-4 col-lg-4\",height:30,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"biege\",contentType:\"Fields\",\r\n");
      out.write("  fields:[\r\n");
      out.write("  {colno:0,name:\"account\",inputType:0,type:\"LOV\",caption:\"Name\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":acvis,\"readOnly\":false,\"chkTag\":true,nf:\"fromdate\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"ledgers\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[]}},\r\n");
      out.write("  {colno:colno,name:\"fromdate\",inputType:0,type:\"DATE\",caption:\"From Date\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"todate\"},\r\n");
      out.write("  {colno:2,name:\"todate\",inputType:0,type:\"DATE\",caption:\"To Date\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"\"}  \r\n");
      out.write("  ]},\r\n");
      out.write("  {name:\"branch1\",title:\"\",height:30,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"biege\",contentType:\"Fields\",\r\n");
      out.write("  fields:[{colno:0,name:\"branch\",inputType:0,type:\"LOV\",caption:\"\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":false,\"chkTag\":true,nf:\"\",lovOptions:{url:\"/inventory/service/ajax\",ajax:\"userbranch\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[]}}\r\n");
      out.write("  ]}]};\r\n");
      out.write("\r\n");
      out.write("var ledgereport=null;\r\n");
      out.write("ledgereport=new FlexUI.Screen(\"ledgereport\",sProps);\r\n");
      out.write("console.log(\"v\"+Object.values(ledgereport));\r\n");
      out.write("setDefaultBranch();\r\n");
      out.write("var newParams=\"&fromdate=\"+screenObjects.getScreenObject(\"fromdate\").getValue()+\"&todate=\"+screenObjects.getScreenObject(\"todate\").getValue()+\"&account=0&branch=\"+screenObjects.getScreenObject(\"branch\").getTag();\r\n");
      out.write("jqReport(");
      out.print(rptId);
      out.write(",\"#rep\",newParams,null,300);\r\n");
      out.write("	\r\n");
      out.write("function setDefaultBranch(){\r\n");
      out.write("		var branch=screenObjects.getScreenObject(\"branch\");\r\n");
      out.write("		branch.setTag(defbranch[0][1]);\r\n");
      out.write("		branch.setValue(defbranch[0][0]);\r\n");
      out.write("	}\r\n");
      out.write("function enableSearch(){\r\n");
      out.write("	toggleSearchToolBar(");
      out.print(rptId);
      out.write(");\r\n");
      out.write("}\r\n");
      out.write("enableSearch();	       \r\n");
      out.write("function reportGo(id){\r\n");
      out.write("	alert(\"go\");\r\n");
      out.write("	showLoader();\r\n");
      out.write("	var newParams=\"&fromdate=\"+screenObjects.getScreenObject(\"fromdate\").getValue()+\"&todate=\"+screenObjects.getScreenObject(\"todate\").getValue()+\"&account=\"+screenObjects.getScreenObject(\"account\").getTag()+\"&branch=\"+screenObjects.getScreenObject(\"branch\").getTag();\r\n");
      out.write("	changeUrlAndReloadGrid(id,\"\",newParams);\r\n");
      out.write("	hideLoader();\r\n");
      out.write("	var v=l.callAjax(\"GET\",\"/inventory/service/ajax\",\"ic=0&id=");
      out.print(rptId);
      out.write("&fromdate=\"+screenObjects.getScreenObject(\"fromdate\").getValue()+\"&todate=\"+screenObjects.getScreenObject(\"todate\").getValue()+\"&account=\"+screenObjects.getScreenObject(\"account\").getTag()+\"&branch=\"+screenObjects.getScreenObject(\"branch\").getTag());\r\n");
      out.write("	if(v.data[0][0]<0){\r\n");
      out.write("		$('#netAmt').text(\"Closing Balance \"+roundOff(toNumber(v.data[0][0])*-1,2)+\" Cr \");\r\n");
      out.write("	}else{\r\n");
      out.write("		$('#netAmt').text(\"Closing Balance \"+roundOff(toNumber(v.data[0][0]),2)+\" Dr \");\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("function showHideFilter(){\r\n");
      out.write("	if( $('#divFirstFilter').is(':visible') ) {\r\n");
      out.write("		$('#divFirstFilter').css(\"display\",\"none\");\r\n");
      out.write("	}else{\r\n");
      out.write("		$('#divFirstFilter').css(\"display\",\"block\");\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("function printCurrentSession(){\r\n");
      out.write("		var printData={};\r\n");
      out.write("		printData[\"fromdate\"]=screenObjects.getScreenObject(\"fromdate\").getValue();\r\n");
      out.write("		printData[\"todate\"]=screenObjects.getScreenObject(\"todate\").getValue();\r\n");
      out.write("		printData[\"account\"]=screenObjects.getScreenObject(\"account\").getTag();\r\n");
      out.write("		printData[\"name\"]=screenObjects.getScreenObject(\"account\").getValue();\r\n");
      out.write("		printData[\"branch\"]=screenObjects.getScreenObject(\"branch\").getTag();		\r\n");
      out.write("		printData[\"type\"]=\"LEDREP\";\r\n");
      out.write("		printData[\"branchname\"]=\"Tiruvarur Medical Center PVT Ltd\";\r\n");
      out.write("		printData[\"address1\"]=\"27,Javulikara Street\";\r\n");
      out.write("		printData[\"address2\"]=\"Tiruvarur - 610 001\";\r\n");
      out.write("		printData[\"address3\"]=\"Phone - 242292,240292\";\r\n");
      out.write("		printData[\"login_id\"]='");
      out.print(userId);
      out.write("';\r\n");
      out.write("		printData[\"reportid\"]=\"");
      out.print(rptId);
      out.write("\";\r\n");
      out.write("		printData[\"host\"]='192.168.1.101:8080/inventory';\r\n");
      out.write("		printData[\"rows\"]=\"48\";		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("            url: \"http://localhost:9191\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType:\"application/x-www-form-urlencoded\",\r\n");
      out.write("            data:\"printdata=\"+JSON.stringify(printData),\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("				//alert(r.result);		\r\n");
      out.write("            }\r\n");
      out.write("        });			\r\n");
      out.write("}\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
