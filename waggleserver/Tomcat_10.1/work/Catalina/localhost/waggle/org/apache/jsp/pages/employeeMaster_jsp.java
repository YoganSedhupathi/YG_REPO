/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.9
 * Generated at: 2024-07-19 08:16:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class employeeMaster_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\r\n");
      out.write("  <title>Employee</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"card border-0 shadow\">\r\n");
      out.write("		<div class=\"card-body lpage\" >\r\n");
      out.write("			<div class=\"row w-100\" >\r\n");
      out.write("				<div class=\"col-md-6 d-flex align-items-center\">\r\n");
      out.write("					<h4 class=\"header-title\">Employee</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				<div  class=\"col-md-6 text-right\" id=\"addGrp\"></div>\r\n");
      out.write("				<div  class=\"col-md-6 text-right\" id=\"saveGrp\" style='display:none'>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-edit\" onclick='onSaveClicked()'><span class=\"mdi mdi-check-circle-outline me-2\"></span>Save</button>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-clear mx-3\" onclick='hideMasterData()'><span class=\"mdi mdi-refresh me-2\"></span>Cancel</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row \" id=\"jqcontainer\" ><div class=\"table-container\" ><div id=\"xyz\" class=\"w-100\">\r\n");
      out.write("\r\n");
      out.write("				\r\n");
      out.write("			</div></div></div>	\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"callback\" style=\"display:none\" >\r\n");
      out.write("				<div class=\"table-container\">\r\n");
      out.write("					<div class=\"row w-100 ml-8\">                    \r\n");
      out.write("						<div id=\"group1\" class=\"row\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("				   <div class=\"row w-100 ml-8\">\r\n");
      out.write("						<div id=\"group2\" class=\"row\"></div>\r\n");
      out.write("				   </div>\r\n");
      out.write("				   <div class=\"row w-100 ml-8\">\r\n");
      out.write("						<div id=\"group3\" class=\"row\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			   \r\n");
      out.write("			</div>\r\n");
      out.write("	\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  	var l=new FlexUI.Ajax();\r\n");
      out.write("  	var defdata=l.callAjax(\"GET\",\"/waggle/service/ajax\",\"id=userbranch&ic=0\");\r\n");
      out.write("  	var branches=defdata.data;\r\n");
      out.write("    var sProps={title:{height:30,width:100,name:\"AMC\"},container:{id:\"callback\",isdialog:false},js:\"\",screen:[\r\n");
      out.write("  	{name:\"group1\",title:\"Employee Details\",pcolumns:2,height:40,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"beige\",contentType:\"Fields\",\r\n");
      out.write("  	fields:[{colno:1,name:\"code\",inputType:0,type:\"INT\",caption:\"Code\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":false,\"readOnly\":true,\"chkTag\":false,nf:\"name\"},\r\n");
      out.write("  	{colno:0,name:\"empname\",inputType:0,type:\"TEXT\",caption:\"Name\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"username\"},\r\n");
      out.write("  	{colno:1,name:\"username\",inputType:0,type:\"TEXT\",caption:\"User Name\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"password\"},\r\n");
      out.write("  	{colno:0,name:\"password\",inputType:0,type:\"password\",caption:\"Password\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"role\"},\r\n");
      out.write("  	{colno:1,name:\"role\",inputType:0,type:\"LOV\",caption:\"Role\",mandatory:true,defaultValue:\"\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":true,nf:\"address1\",lovOptions:{url:\"/waggle/service/ajax\",ajax:\"roles\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[]}}\r\n");
      out.write("  	]\r\n");
      out.write("  	},{name:\"group2\",title:\"Contact Details\",pcolumns:2,height:40,width:98,minWidth:500,minHeight:200,colWidth:45,float:\"left\",backColor:\"beige\",contentType:\"Fields\",\r\n");
      out.write("  	fields:[\r\n");
      out.write("  	{colno:0,name:\"address1\",inputType:0,type:\"TEXT\",caption:\"Building\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"address2\"},\r\n");
      out.write("  	{colno:1,name:\"address2\",inputType:0,type:\"TEXT\",caption:\"Street\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":100,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"city\"},\r\n");
      out.write("  	{colno:0,name:\"city\",inputType:0,type:\"TEXT\",caption:\"City\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":50,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"pincode\"},\r\n");
      out.write("	{colno:1,name:\"pincode\",inputType:0,type:\"TEXT\",caption:\"PinCode\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"mobile\"},\r\n");
      out.write("	{colno:0,name:\"mobile\",inputType:0,type:\"TEXT\",caption:\"Mobile\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":30,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"phone\"},  \r\n");
      out.write("	{colno:1,name:\"phone\",inputType:0,type:\"TEXT\",caption:\"Phone\",mandatory:false,defaultValue:\"0\",\"maxValue\":0,\"textLength\":30,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"defbranch\"},\r\n");
      out.write("	{colno:0,name:\"defbranch\",inputType:0,type:\"LOV\",caption:\"Primary Branch\",mandatory:true,defaultValue:\"0\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"chkTag\":true,nf:\"status\",lovOptions:{url:\"/waggle/service/ajax\",ajax:\"userbranch\",scrollEnabled:true,searchFromList:false,dsi:0,params:[],results:[]}},\r\n");
      out.write("	{colno:1,name:\"status\",inputType:1,type:\"TEXT\",caption:\"Status\",mandatory:true,defaultValue:\"\",\"textLength\":10,\"visible\":true,\"readOnly\":false,\"chkTag\":false,nf:\"branch_data\",keys:\"Active~InActive\",values:\"Active~InActive\"},\r\n");
      out.write("	{colno:0,name:\"usertype\",inputType:0,type:\"TEXT\",caption:\"Type\",mandatory:false,defaultValue:\"U\",\"textLength\":10,\"visible\":false,\"readOnly\":false,\"chkTag\":false,nf:\"branch_data\"}\r\n");
      out.write("	]\r\n");
      out.write("  	},{name:\"branch\",title:\"Employee Branch Details\",height:30,width:98,minWidth:500,minHeight:200,colWidth:98,float:\"left\",backColor:\"biege\",contentType:\"Table\",tableProperties:{rowEmptyCheckColumn:\"location\",serialNumberColumn:\"sno\",rowObject:false,enableAddRow:false,optional:false,columns:[\r\n");
      out.write("    {order:\"0\",id: \"sno\", name: \"SNo\", field: \"sno\",defaultValue:\"0\",\"inputType\":0,\"type\":\"INT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":true,\"chkTag\":false,width:50,sno:true},\r\n");
      out.write("    {order:\"1\",id: \"location\", name: \"Branch\", field: \"location\",defaultValue:\"0\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":true,width:200,\"chkTag\":true},\r\n");
      out.write("    {order:\"2\",id: \"selected\", name: \"Select\", field: \"selected\",defaultValue:\"0\",\"inputType\":2,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"mandatory\":false,width:120,chkTag:false},\r\n");
      out.write("    {order:\"3\",id: \"lmname\", name: \"Default Location\", field: \"lmname\",defaultValue:\"0\",\"inputType\":0,\"type\":\"LOV\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"mandatory\":false,width:200,\"chkTag\":true,lovOptions:{url:\"/waggle/service/ajax\",ajax:\"branchlocations\",scrollEnabled:true,searchFromList:false,dsi:0,params:[{n:\"branch\",src:\"branch_data\",ft:true,row:\"cr\",col:\"1\"}],results:[]}}    \r\n");
      out.write("    ]\r\n");
      out.write("    }}\r\n");
      out.write("    /*,{name:\"processes\",title:\"Employee Process Update\",height:30,width:98,minWidth:500,minHeight:200,colWidth:98,float:\"left\",backColor:\"biege\",contentType:\"Table\",tableProperties:{rowEmptyCheckColumn:1,enableAddRow:false,optional:false,columns:[\r\n");
      out.write("    {order:\"0\",id: \"sno\", name: \"SNo\", field: \"sno\",defaultValue:\"0\",\"inputType\":0,\"type\":\"INT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":true,\"chkTag\":false,width:20,sno:true},\r\n");
      out.write("    {order:\"1\",id: \"group\", name: \"Group\", field: \"group\",defaultValue:\"\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":false,width:100,\"chkTag\":false},\r\n");
      out.write("    {order:\"2\",id: \"process\", name: \"Process\", field: \"process\",defaultValue:\"\",\"inputType\":0,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":true,\"mandatory\":false,width:100,\"chkTag\":true},\r\n");
      out.write("    {order:\"3\",id: \"selected\", name: \"Select\", field: \"selected\",defaultValue:\"0\",\"inputType\":2,\"type\":\"TEXT\",\"maxValue\":0,\"textLength\":10,\"decimalLength\":0,\"visible\":true,\"readOnly\":false,\"mandatory\":false,width:20,chkTag:false}\r\n");
      out.write("    ]\r\n");
      out.write("    }}*/\r\n");
      out.write("    ]};\r\n");
      out.write("  var employee=new FlexUI.Screen(\"employeemaster\",sProps);\r\n");
      out.write("  jqReport(910002,\"#xyz\");\r\n");
      out.write("  function addMasterData(){ \r\n");
      out.write("  	employee.clearScreen();\r\n");
      out.write("  	var b=screenObjects.getScreenObject('branch_data');\r\n");
      out.write("  	var s=branches.length;\r\n");
      out.write("  	for(var h=0;h<s;h++){\r\n");
      out.write("  		if(b.getSize()==h){\r\n");
      out.write("  			b.addRow();\r\n");
      out.write("  		}\r\n");
      out.write("  		b.setText(h,1,branches[h][0]);\r\n");
      out.write("  		b.setCellTag(h,1,branches[h][1]);\r\n");
      out.write("  		b.setText(h,3,branches[h][5]);\r\n");
      out.write("  		b.setCellTag(h,3,branches[h][6]);\r\n");
      out.write("  	}\r\n");
      out.write("  	/*var p=screenObjects.getScreenObject('processes_data');\r\n");
      out.write("  	s=processes.length;\r\n");
      out.write("  	for(var i=0;i<s;i++){\r\n");
      out.write("  		if(p.getSize()==i){\r\n");
      out.write("  			p.addRow();\r\n");
      out.write("  		}\r\n");
      out.write("  		p.setText(i,1,processes[i][6]);\r\n");
      out.write("  		p.setText(i,2,processes[i][0]);\r\n");
      out.write("  		p.setCellTag(i,2,processes[i][1]);\r\n");
      out.write("  	}*/\r\n");
      out.write("  	$('#callback').css('display','block');\r\n");
      out.write("  	$('#saveGrp').css('display','block');\r\n");
      out.write("  	$('#history').css('display','block');\r\n");
      out.write("  	$('#addGrp').css('display','none');\r\n");
      out.write("  	$('#xyz').css('display','none');\r\n");
      out.write("	$('#jqcontainer').css('display','none');\r\n");
      out.write("  }\r\n");
      out.write("  function hideMasterData(){\r\n");
      out.write("  	$('#callback').css('display','none');\r\n");
      out.write("  	$('#saveGrp').css('display','none');\r\n");
      out.write("  	$('#history').css('display','none');\r\n");
      out.write("  	$('#addGrp').css('display','block');\r\n");
      out.write("  	$('#xyz').css('display','block');\r\n");
      out.write("	$('#jqcontainer').css('display','block');\r\n");
      out.write("  }  \r\n");
      out.write("\r\n");
      out.write("  function toggleHeaderRow(){\r\n");
      out.write("  	toggleSearchToolBar(\"910002\");\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  toggleHeaderRow();\r\n");
      out.write("  function onSaveClicked(id,me){\r\n");
      out.write("    var cid=screenObjects.getScreenObject(\"code\").getValue();\r\n");
      out.write("    if(cid!=\"0\" && cid!=\"\"){\r\n");
      out.write("		alert(\"edit\");\r\n");
      out.write("    	employee.setOperation(\"EDIT\");\r\n");
      out.write("    }\r\n");
      out.write("	var d=employee.processDataToSave();\r\n");
      out.write("	if(\"FAILED\"!=d){\r\n");
      out.write("		var s=new FlexUI.Ajax();\r\n");
      out.write("		showLoader();\r\n");
      out.write("		var r=s.callAjax(\"POST\",\"/waggle/service/users/employee\",d);\r\n");
      out.write("		hideLoader();\r\n");
      out.write("		if(r.result==\"Success\"){\r\n");
      out.write("			setErrorMessage(r.message+\" [No:\"+r.code+\"]\");\r\n");
      out.write("			employee.clearScreen();\r\n");
      out.write("			hideMasterData();\r\n");
      out.write("			reloadGrid(\"910002\");\r\n");
      out.write("			return r.key;			\r\n");
      out.write("		}else{\r\n");
      out.write("			setErrorMessage(r.message);		\r\n");
      out.write("		}\r\n");
      out.write("		return 0;\r\n");
      out.write("	}\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  function loadOrderData(url,code,did){\r\n");
      out.write("  	if(url==\"\"){\r\n");
      out.write("  		url=\"/waggle/service/users/employee\";\r\n");
      out.write("  	}\r\n");
      out.write("  	if(code!=\"\"){\r\n");
      out.write("  		code=\"code=\"+code+\"\";\r\n");
      out.write("  	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("  	showLoader();\r\n");
      out.write("	employee.clearScreen();\r\n");
      out.write("	var v=l.callAjax(\"GET\",url,code);\r\n");
      out.write("	\r\n");
      out.write("	employee.loadData(v);\r\n");
      out.write("	screenObjects.getScreenObject('username').setEnabled(false);\r\n");
      out.write("  	screenObjects.getScreenObject('password').setEnabled(false);	\r\n");
      out.write("	$('#callback').css('display','block');\r\n");
      out.write("  	$('#saveGrp').css('display','block');\r\n");
      out.write("  	$('#history').css('display','block');\r\n");
      out.write("  	$('#addGrp').css('display','none');\r\n");
      out.write("  	$('#xyz').css('display','none');\r\n");
      out.write("	$('#jqcontainer').css('display','none');\r\n");
      out.write("  	hideLoader();\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
